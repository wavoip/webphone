(function(){"use strict";class o extends AudioWorkletProcessor{uint8=new Uint8Array(0);offset=0;constructor(s){super(s),this.port.onmessage=this.appendBuffers.bind(this)}async appendBuffers({data:{buffer:s}}){const e=new Uint8Array(this.uint8.length+s.length);return e.set(this.uint8,0),e.set(s,this.uint8.length),this.uint8=e,!0}process(s,e,a){const u=e[0];if(this.offset>=this.uint8.length)return!0;const i=new Uint8Array(256);for(let t=0;t<256&&!(this.offset>=this.uint8.length);t++,this.offset++)i[t]=this.uint8[this.offset];const r=new Uint16Array(i.buffer);for(let t=0;t<r.length;t++){const n=r[t],f=n>=32768?-(65536-n)/32768:n/32767;u[0][t]=f}return this.uint8.length-this.offset>25e3&&(this.offset+=1e4),!0}}registerProcessor("audio-data-worklet-stream",o)})();
